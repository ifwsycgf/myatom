# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson
###############################################################################
# for sphinx and reStructurd
###############################################################################
'.text.sphinx, .source.gfm.sphinx, .text.restructuredtext':
  'include':
    'prefix': 'include'
    'body': '.. include:: ${1:path}\n$0'
  'attention':
    'prefix': 'attention'
    'body': '.. attention:: ${1:description}\n$0'
  'caution':
    'prefix': 'caution'
    'body': '.. caution:: ${1:description}\n$0'
  'danger':
    'prefix': 'danger'
    'body': '.. danger:: ${1:description}\n$0'
  'error':
    'prefix': 'error'
    'body': '.. error:: ${1:description}\n$0'
  'hint':
    'prefix': 'hint'
    'body': '.. hint:: ${1:description}\n$0'
  'important':
    'prefix': 'important'
    'body': '.. important:: ${1:description}\n$0'
  'tip':
    'prefix': 'tip'
    'body': '.. tip:: ${1:description}\n$0'
  'admonition':
    'prefix': 'admonition'
    'body': '.. admonition:: ${1:description}\n$0'
  'note':
    'prefix': 'note'
    'body': '.. note:: ${1:description}\n$0'
  'warning':
    'prefix': 'warning'
    'body': '.. warning:: ${1:description}\n$0'
  'doc':
    'prefix': 'doc'
    'body': ':doc:`$1` $2'
  'ref':
    'prefix': 'ref'
    'body': ':ref:`$1` $2'
  'toctree':
    'prefix': 'toctree'
    'body': """
    .. toctree::
       :maxdepth: ${1:1}
       :numbered:

       ${2:reST file}
    """
  'csv-table':
    'prefix': 'csv-table'
    'body': """
    .. csv-table:: ${1:Table Title}
       :header: \\"${2:line title}\\", \\"${3:line title}\\", \\"${4:line title}\\"
       :widths: ${5:widths#1}, ${6:widths#2}, ${7:widths#3}

       "${8:content}", "${9:content}", "${10:content}"
    """
  'list-table':
    'prefix': 'list-table'
    'body': """
    .. list-table:: ${1:Table Title}
       :widths: ${2:widths#1}, ${3:widths#2}, ${4:widths#3}
       :header-rows: ${5:rows}
    """
  'figure':
    'prefix': 'figure'
    'body': """
    .. figure:: ${1:path}
      ${2:description}
    """

###############################################################################
# for ansible playbook
###############################################################################
'.source.ansible':
  'firts':
    'prefix': 'first'
    'body': """
    ---
    - name: ${1:Playbool name}
      hosts: ${2:all}
      become: ${3:true}
      tasks:
        - name: ${4:task name}
        ${5:module}
    """
  'yum':
    'prefix': 'yum'
    'body': """
    yum:
      name: ${1:packeage name}
      state: ${2:present|installed|latest|absent|removed}
    """
  'apt':
    'prefix': 'apt'
    'body': """
    apt:
      name: ${1:packeage name}
      state: ${2:present|installed|latest|absent|removed}
    """
  'copy':
    'prefix': 'copy'
    'body': """
    copy:
      src: ${1:source file path}
      dest: ${2:destination file paty}
      backup: ${3:true|false}
    """
  'template':
    'prefix': 'temp'
    'body': """
    template:
      src: ${1:source file path}
      dest: ${2:destination file paty}
      backup: ${3:true|false}
      validate: ${4:validate command}
    vars:
      ${5:ver name}: ${6:var value}
      ${7:ver name}: ${8:var value}
    """
  'notify':
    'prefix': 'notify'
    'body': '- name: ${1:notify name}'
  'handlers':
    'prefix': 'handlers'
    'body': """
    handlers:
      - name: ${1:notify name}
        service:
          name: ${2:service name}
          state: ${3:reloaded}
    """
